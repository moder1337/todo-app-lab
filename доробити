server.js
const express = require('express');
const app = express();
const PORT = 3000;

app.set('view engine', 'pug');
app.set('views', './views');

app.use(express.json());
app.use(express.urlencoded({ extended: true }));

let todoId = 1;
let todoList = [];

// ==== API ====

// Показати всі задачі
app.get('/api/list', (req, res) => {
  res.json(todoList);
});

// Додати нову задачу
app.post('/api/list', (req, res) => {
  const { name } = req.body;
  if (!name) return res.status(400).json({ error: 'Task name missing' });
  const task = { id: todoId++, name, done: false };
  todoList.push(task);
  res.status(201).json(task);
});

// Змінити статус done
app.put('/api/list/:id', (req, res) => {
  const id = parseInt(req.params.id);
  const task = todoList.find(item => item.id === id);
  if (!task) return res.status(404).json({ error: 'Not found' });
  task.done = !task.done;
  res.json(task);
});

// Видалити задачу
app.delete('/api/list/:id', (req, res) => {
  const id = Number(req.params.id);
  const idx = todoList.findIndex(item => item.id === id);
  if (idx === -1) return res.status(404).json({ error: 'Not found' });
  todoList.splice(idx, 1);
  res.status(204).end();
});

// ==== Веб-інтерфейс ====

// Додати задачу через форму
app.post('/add', (req, res) => {
  const { name } = req.body;
  if (!name) return res.redirect('/todos');
  const task = { id: todoId++, name, done: false };
  todoList.push(task);
  res.redirect('/todos');
});

// Позначити як виконане / невиконане
app.post('/toggle/:id', (req, res) => {
  const id = Number(req.params.id);
  const task = todoList.find(item => item.id === id);
  if (task) task.done = !task.done;
  res.redirect('/todos');
});

// Видалити задачу
app.post('/delete/:id', (req, res) => {
  const id = Number(req.params.id);
  todoList = todoList.filter(item => item.id !== id);
  res.redirect('/todos');
});

// Відобразити всі задачі
app.get('/todos', (req, res) => {
  res.render('todos', { todoList });
});

app.listen(PORT, () => console.log('Go to: http://localhost:' + PORT + '/todos'));

todos
extends layout

block content
  h2 Мій список справ

  form(action="/add", method="post")
    input(type="text", name="name", placeholder="Ввести задачу", required)
    button(type="submit") Додати

  if todoList.length === 0
    p Список порожній
  else
    ul
      each item in todoList
        li
          span(class=item.done ? 'done' : '') #{item.name}

          form(action=`/toggle/${item.id}`, method="post", style="display:inline")
            button(type="submit")
              if item.done
                | ⏪ Повернути
              else
                | ✅ Виконано

          form(action=`/delete/${item.id}`, method="post", style="display:inline")
            button(type="submit") ❌ Видалити

layout
doctype html
html
  head
    meta(charset="utf-8")
    title Мій To-Do List
    style.
      body {
        padding: 35px;
        background: #fafafa;
        font-family: Verdana;
      }
      h2 { text-align: left; }
      .done { color: #888; text-decoration: line-through; }
  body
    block content
